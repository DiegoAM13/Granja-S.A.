{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PorcinoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8081/Porcino';\n  }\n  obtenerPorcinos() {\n    return this.http.get(this.apiUrl);\n  }\n  guardarPorcino(porcino) {\n    return this.http.post(`${this.apiUrl}/Guardar`, porcino);\n  }\n  actualizarPorcino(identificacion, porcino) {\n    return this.http.put(`${this.apiUrl}/Actualizar/${identificacion}`, porcino);\n  }\n  eliminarPorcino(identificacion) {\n    return this.http.delete(`${this.apiUrl}/Eliminar/${identificacion}`);\n  }\n  static {\n    this.ɵfac = function PorcinoService_Factory(t) {\n      return new (t || PorcinoService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PorcinoService,\n      factory: PorcinoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PorcinoService","constructor","http","apiUrl","obtenerPorcinos","get","guardarPorcino","porcino","post","actualizarPorcino","identificacion","put","eliminarPorcino","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\estiv\\OneDrive\\Documentos\\GitHub\\Programacion distribuida y paralela\\Act2\\GranjaSA\\Frontend\\src\\app\\services\\porcino.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PorcinoDTO } from '../models/porcino.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PorcinoService {\n  private apiUrl = 'http://localhost:8081/Porcino';\n\n  constructor(private http: HttpClient) { }\n\n  obtenerPorcinos(): Observable<PorcinoDTO[]> {\n    return this.http.get<PorcinoDTO[]>(this.apiUrl);\n  }\n\n  guardarPorcino(porcino: PorcinoDTO): Observable<string> {\n    return this.http.post<string>(`${this.apiUrl}/Guardar`, porcino);\n  }\n\n  actualizarPorcino(identificacion: string, porcino: PorcinoDTO): Observable<PorcinoDTO> {\n    return this.http.put<PorcinoDTO>(`${this.apiUrl}/Actualizar/${identificacion}`, porcino);\n  }\n\n  eliminarPorcino(identificacion: string): Observable<string> {\n    return this.http.delete<string>(`${this.apiUrl}/Eliminar/${identificacion}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+BAA+B;EAER;EAExCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,IAAI,CAACF,MAAM,CAAC;EACjD;EAEAG,cAAcA,CAACC,OAAmB;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,GAAG,IAAI,CAACL,MAAM,UAAU,EAAEI,OAAO,CAAC;EAClE;EAEAE,iBAAiBA,CAACC,cAAsB,EAAEH,OAAmB;IAC3D,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAa,GAAG,IAAI,CAACR,MAAM,eAAeO,cAAc,EAAE,EAAEH,OAAO,CAAC;EAC1F;EAEAK,eAAeA,CAACF,cAAsB;IACpC,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAS,GAAG,IAAI,CAACV,MAAM,aAAaO,cAAc,EAAE,CAAC;EAC9E;;;uBAnBWV,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdjB,cAAc;MAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8081/Clientes';\n  }\n  obtenerClientes() {\n    return this.http.get(this.apiUrl);\n  }\n  guardarCliente(cliente) {\n    return this.http.post(`${this.apiUrl}/Guardar`, cliente);\n  }\n  actualizarCliente(cedula, cliente) {\n    return this.http.put(`${this.apiUrl}/Actualizar/${cedula}`, cliente);\n  }\n  eliminarCliente(cedula) {\n    return this.http.delete(`${this.apiUrl}/Eliminar/${cedula}`);\n  }\n  static {\n    this.ɵfac = function ClienteService_Factory(t) {\n      return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClienteService,\n      factory: ClienteService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ClienteService","constructor","http","apiUrl","obtenerClientes","get","guardarCliente","cliente","post","actualizarCliente","cedula","put","eliminarCliente","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\estiv\\OneDrive\\Documentos\\GitHub\\Programacion distribuida y paralela\\Act2\\GranjaSA\\Frontend\\src\\app\\services\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cliente } from '../models/cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  private apiUrl = 'http://localhost:8081/Clientes';\n\n  constructor(private http: HttpClient) { }\n\n  obtenerClientes(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(this.apiUrl);\n  }\n\n  guardarCliente(cliente: Cliente): Observable<string> {\n    return this.http.post<string>(`${this.apiUrl}/Guardar`, cliente);\n  }\n\n  actualizarCliente(cedula: string, cliente: Cliente): Observable<Cliente> {\n    return this.http.put<Cliente>(`${this.apiUrl}/Actualizar/${cedula}`, cliente);\n  }\n\n  eliminarCliente(cedula: string): Observable<string> {\n    return this.http.delete<string>(`${this.apiUrl}/Eliminar/${cedula}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAET;EAExCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,cAAcA,CAACC,OAAgB;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,GAAG,IAAI,CAACL,MAAM,UAAU,EAAEI,OAAO,CAAC;EAClE;EAEAE,iBAAiBA,CAACC,MAAc,EAAEH,OAAgB;IAChD,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAU,GAAG,IAAI,CAACR,MAAM,eAAeO,MAAM,EAAE,EAAEH,OAAO,CAAC;EAC/E;EAEAK,eAAeA,CAACF,MAAc;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAS,GAAG,IAAI,CAACV,MAAM,aAAaO,MAAM,EAAE,CAAC;EACtE;;;uBAnBWV,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdjB,cAAc;MAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}